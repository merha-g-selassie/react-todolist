{"version":3,"sources":["AddTodo.js","Footer.js","Header.js","Todo.js","TodoList.js","App.js","registerServiceWorker.js","index.js"],"names":["AddTodo","react_default","a","createElement","onSubmit","this","props","addTodo","className","placeholder","type","ref","inputRef","id","onClick","Component","Footer","Header","Todo","todo","index","deleteTodo","text","TodoList","_ref","todos","map","i","src_Todo","key","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onAddTodo","event","console","log","preventDefault","textInput","value","length","state","push","setState","addField","removeById","parseInt","splice","onDeleteTodo","target","_this2","src_Header","src_AddTodo","input","src_TodoList","src_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"yNA0BeA,mLApBb,OACCC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKC,MAAMC,SAC1BN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,4BACdP,EAAAC,EAAAC,cAAA,SACCM,YAAY,aACZC,KAAK,OACLC,IAAKN,KAAKC,MAAMM,SAChBC,GAAG,OACHL,UAAU,iBAEXP,EAAAC,EAAAC,cAAA,UAAQW,QAAST,KAAKC,MAAMC,SAC5BN,EAAAC,EAAAC,cAAA,KAAGK,UAAU,0BAhBGO,aCgBPC,0LAZb,OACEf,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAAA,sDARUY,cCYNE,mLARb,OACEhB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,uCANgBY,aCaNG,mLARb,OAECjB,EAAAC,EAAAC,cAAA,MAAIU,GAAIR,KAAKC,MAAMa,KAAKC,MAAON,QAAST,KAAKC,MAAMe,YAAahB,KAAKC,MAAMa,KAAKG,KAAKrB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGK,UAAU,yBALxFO,aCsBJQ,EAtBE,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,MAAOJ,EAAiBG,EAAjBH,WAE1B,OACCpB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAEEsB,EAAMC,IAAI,SAACP,EAAMQ,GAChB,OACC1B,EAAAC,EAAAC,cAACyB,EAAD,CACCC,IAAKV,EAAKC,MACVD,KAAMA,EACNE,WAAYA,SCPhBM,EAAI,EAiEOG,cA9Db,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA3B,KAAAyB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAA3B,KAAA2B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA/B,QAOJgC,UAAY,SAACC,GAGT,GAFAC,QAAQC,IAAIb,GACZW,EAAMG,iBACHV,EAAKW,UAAUC,MAAMC,OAAS,EAAE,CACjC,IAAMzB,EAAO,CAAEC,MAAOO,IAAKL,KAAMS,EAAKW,UAAUC,OAChDZ,EAAKc,MAAMpB,MAAMqB,KAAK3B,GACtBY,EAAKW,UAAUC,MAAQ,GAMzB,OAHAZ,EAAKgB,SAAS,CACZC,SAAUjB,EAAKW,UAAUC,QAEpBZ,EAAKc,MAAMpB,OApBRM,EAuBhBkB,WAAa,SAAC7B,GACV,IAAK,IAAIO,EAAI,EAAGA,EAAII,EAAKc,MAAMpB,MAAMmB,OAAQjB,IACxCuB,SAASnB,EAAKc,MAAMpB,MAAME,GAAGP,MAAO,MAAQ8B,SAAS9B,EAAO,KAC7DW,EAAKc,MAAMpB,MAAM0B,OAAOxB,EAAG,IA1BnBI,EA+BdqB,aAAe,SAACd,GAKd,OAJAP,EAAKkB,WAAWX,EAAMe,OAAOxC,IAC7BkB,EAAKgB,SAAS,CACZtB,MAAOM,EAAKc,MAAMpB,QAEbM,EAAKc,MAAMpB,OAlChBM,EAAKc,MAAQ,CACXpB,MAAO,GACPuB,SAAU,IAJFjB,wEAyCL,IAAAuB,EAAAjD,KAET,OACIJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAACoD,EAAD,MACAtD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAACqD,EAAD,CACAjD,QAASF,KAAKgC,UACdzB,SAAU,SAAC6C,GAAD,OAAWH,EAAKZ,UAAYe,KACtCxD,EAAAC,EAAAC,cAACuD,EAAD,CAAUjC,MAAOpB,KAAKwC,MAAMpB,MAAOJ,WAAYhB,KAAK+C,iBAG1DnD,EAAAC,EAAAC,cAACwD,EAAD,eAxDQ5C,aCAZ6C,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7B,QACfuB,UAAUC,cAAcQ,WAK1BtC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBsC,MAAM,SAAAC,GACLxC,QAAQwC,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,kBAAwBxB,OAAOC,UAC3CwB,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAsB,OAAMH,kBAAN,sBAEP1B,GAiDV,SAAiCO,GAE/BuB,MAAMvB,GACHI,KAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,KAAK,SAAAC,GACjCA,EAAayB,aAAa1B,KAAK,WAC7BT,OAAOC,SAASmC,aAKpBhC,EAAgBC,KAGnBW,MAAM,WACLvC,QAAQC,IACN,mEArEA2D,CAAwBhC,GAIxBC,UAAUC,cAAc2B,MAAMzB,KAAK,WACjChC,QAAQC,IACN,+GAMJ0B,EAAgBC,MCzCxBiC","file":"static/js/main.5bc2801e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass AddTodo extends Component {\n\t\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={this.props.addTodo}>\n\t\t\t\t\t<div className=\"input-group center-block\">\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tplaceholder='Add a todo' \n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tref={this.props.inputRef}\n\t\t\t\t\t\t\tid='todo'\n\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button onClick={this.props.addTodo}>\n\t\t\t\t\t\t<i className=\"fa fa-plus\"></i></button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default AddTodo;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n\trender() {\n\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t      <p>Made by Merhawi Ghebre Selassie</p>\n\t\t\t\t\t    </div>\n\t\t\t\t  </footer>\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nclass Header extends Component {\n\n\trender() {\n\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>React.js Todolist</h1>\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;","import React, { Component } from 'react';\n\n\n\nclass Todo extends Component {\n\trender () {\n\n\t\treturn (\n\n\t\t\t<li id={this.props.todo.index} onClick={this.props.deleteTodo}>{this.props.todo.text}<span><i className=\"fa fa-trash\"></i></span></li>\n\t\t)\n\t}\n\t\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\n\nconst TodoList = ({ todos, deleteTodo }) => {\n\n\treturn (\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{\n\t\t\t\t\ttodos.map((todo, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Todo\n\t\t\t\t\t\t\t\tkey={todo.index}\n\t\t\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t\t)\n\t\n}\n\nexport default TodoList;","import React, { Component } from 'react';\nimport AddTodo from './AddTodo';\nimport './App.css';\nimport Footer from './Footer';\nimport Header from './Header';\nimport TodoList from './TodoList';\n\n\nlet i = 0;\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = {\n        todos: [],\n        addField: ''\n      }\n  }\n\n  onAddTodo = (event) => {\n      console.log(i);\n      event.preventDefault();\n      if(this.textInput.value.length > 0){\n        const todo = { index: i++, text: this.textInput.value};\n        this.state.todos.push(todo);\n        this.textInput.value = '';\n      }\n      \n      this.setState({\n        addField: this.textInput.value\n      })\n      return this.state.todos;\n    }\n\nremoveById = (index) => {\n    for (var i = 0; i < this.state.todos.length; i++) {\n      if(parseInt(this.state.todos[i].index, 10) === parseInt(index, 10)) {\n        this.state.todos.splice(i, 1);\n      }\n    }\n  }\n\n  onDeleteTodo = (event) => {\n    this.removeById(event.target.id);\n    this.setState({\n      todos: this.state.todos\n    })\n    return this.state.todos;\n  }\n\n  \n\n  render() {\n\n  return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className='jumbotron'>\n              <Header/>\n              <div className='container'>\n                <AddTodo \n                addTodo={this.onAddTodo} \n                inputRef={(input) => this.textInput = input} />\n                <TodoList todos={this.state.todos} deleteTodo={this.onDeleteTodo}/>\n              </div> \n          </div>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}